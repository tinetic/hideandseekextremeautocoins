--[[
          ...                               .---:                                                                                             
         .%%%-                             *%%%#*                                                 :===                                        
         .%%%-    .::.  ... ...      ... .=%%%:.. ...     ..     .:.        .:..       .:.  ...  .=%%#..     ..:.      ...  .:                
         .%%%-  =#%%%%%*%%% -%%#    -%%#.*%%%%%%*.%%%.   *%%+ .*%%%%%+   -*%%%%%#=  :*%%%%%*%%%-.%%%%%%%: .+#%%%%%*-  :%%%:#%%:               
         .%%%- *%%#-::=#%%%  =%%*  .#%%: .=%%#....%%%.   *%%+ =%%#      *%%*-::=*=.:%%%=::-*%%%- .=%%#.. :%%%=::-#%%+ :%%%#+--                
         .%%%-.%%%:    :%%%   *%%= *%%-   -%%#   .%%%.   *%%+  +#%%#*- .%%%.       +%%+     #%%-  -%%#   *%%=    .%%%.:%%%:                   
    :=: .=%%%. #%%+   .*%%%    #%%*%%=    -%%#   .%%%-  .#%%+      *%%+ #%%=   :-. =%%#:   -%%%-  -%%#   =%%#.   +%%# :%%%                    
   -%%%%%%%%-  .*%%%##%%%%%    .#%%%+     -%%#    +%%%##%#%%+ =%%#*#%%- .*%%%#%%%*. =%%%##%%%%%-  .#%%%#: =#%%%#%%%+. :%%%                    
     :====:      .-===:.---     =%%*      .---     .-==-.:--:  .-===-      -===-.     :===- ---.    -==-    :-===:    .---                    
                               :%%#.                                                                                                          
                               ===.                                                                                                           
--]]

-- Jayfuscator V1.2.1 --

return(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s)local s,t,u,v,w,x,y,z,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg=89,83,12,89,41,43,29,29,17,37,31,42,59,31,94,27,33,93,21,55,25,92,65,46,24,97,78,62,40,86,36,31,17,56,71,84,32,48,89,84,28,74,47,77,31,67,28,72,50,89 while s~=70 do if t>=807 then if t>=1188 then if t>=1324 then if t>=1408 then if t<=1408 then z=function(s,ch,ci,cj,cj,cj)local cj,ck,cl,cm,cn do cm=s[169]end cl=s[155]cn=by ck=s[144]do cj=s[179]end return function(...)local s,cn,co,cp,cq,cr,cs,ct,cu cu=1 co=-1 cn=-1 cp={}cr={...}ct=(cc('#',...)-1)s={}cq={}for cn=0,ct do do if(not(cn<ck))then cp[(cn-ck)]=cr[(cn+1)];else cq[cn]=cr[(cn+1)];end;end end;cs=(ct-ck+1)do while true do local cn,cs,cv,cw,cx,cy,cz,da,db,dc cx=cj[cu]cy=cx[27]dc=cx[130]cz=cx[141]cw=cx[128]cv=cx[30]do cn=cx[73]end do db=cx[10]end do da=cx[199]end do cs=cx[26]end if not(cy<46)then if not(cy>68)then if not(cy>56)then do if not(cy<51)then if not(cy<54)then do if not(cy<55)then if not(cy~=55)then cq[cs]=(function()do cq[cz]=z(cl[cw],b,ci);end end)else if((cq[cz]>cq[cv]))then cu=da;end;end else do cq[cz]=(cq[da]%cq[cv]);end end end else if not(cy>51)then local b,dc,dd b=cz dc=cq[(b+2)]dd=(cq[b]+dc)cq[b]=dd;do if((dc>0))then do if(not(dd>cq[b+1]))then cu=cx[199];cq[(b+3)]=dd;end end elseif(not(dd<cq[b+1]))then do cu=da;end cq[(b+3)]=dd;end end else if not(cy~=52)then local b,dc,dd do dd=cz end dc={cq[dd](bl(cq,dd+1,cx[199]))}b=0 for de=dd,cx[30]do b=(b+1);do cq[de]=dc[b];end end else do cq[cz]=(0~=da);end do cu=(cu+1);end end end end else if not(cy<48)then do if not(cy<49)then if(cy<50)then cu=((cm[cz]==cm[cv])and da or cu)else cq[cz]=by[cw]end else do if(not(cq[cx[141]]<cq[cv]))then do cu=cx[199];end end;end end end else if 46==cy then cq[cz]=(cq[da]+cq[cv]);else cq[cz]=z(cl[da],nil,ci);end end end end else do if not(cy<63)then if not(cx[27]<66)then do if not(cy>66)then else do if(cy<68)then local b,cl cl=cz b={}do for dc=1,#s do local dd dd=s[dc]for dc=0,#dd do local de,df,dg de=dd[dc]do dg=de[1]end df=de[2]if(dg==cq and df>=cl)then b[df]=dg[df];do de[1]=b;end end;end;end;end else cq[cz]=(cq[cx[199]]^cq[cv]);end end end end else if not(cy<64)then if 64==cy then local b,cl cl,b=bz(...)do for b=i,cz do do cq[(b-1)]=cl[b]end end end else do while(cq[cx[141]]~=cq[cv])do cu=da;break end end end else do return cq[cx[141]]end end end else if not(cy>59)then if not(cx[27]>57)then co=cx[cx[141]];else do if(cx[27]>58)then local b,i b=cz i=da for cl=b,i do cq[cl]=cp[(cl-b)];end;else local b b=cz cq[b](bl(cq,(b+1),da))end end end else if not(cy<61)then if(cy<62)then cq={};do for b=0,ct do if(b<ck)then cq[b]=cr[(b+1)];else break end;end;end else cq[cz]=ci[cm[da]];end else cq[cz]=nil;end end end end end else do if not(cx[27]>80)then if not(cy>74)then if not(cx[27]<72)then do if not(cy>72)then cq[cz]=ci[cm[da]][cm[cv]];else if not(cy~=73)then do cq[cz]=cq[da]end else cq[cz][cq[da]]=cq[cv];end end end else do if not(cy<70)then if 70==cy then for b=cz,da do cq[b]=nil;end;else local b,i,ck,cl i=cz b=((cx[30]-1)*50)do cl=cq[i]end ck=da do for cp=1,ck do cl[(b+cp)]=cq[(i+cp)]end;end end else local b b=cz do return bl(cq,b,(b+da))end;end end end else if not(cy>77)then if not(cy<76)then do if(cx[27]>76)then local b,i,ck i=cz ck={cq[i](bl(cq,i+1,co))}b=0 for cl=i,cv do b=(b+1);cq[cl]=ck[b];end else do return cq[db][cn]end end end else do cq[cx[cz]]=cq end end else if not(cy<79)then if(cy>79)then cj[cu]=bv[cx[73]];cu=da;else local b,i,ck,cl,cp i=cx[141]cp=cv ck=(i+2)cl={cq[i](cq[i+1],cq[ck])}for cr=1,cp do cq[(ck+cr)]=cl[cr]end b=cq[(i+3)]if b then cq[ck]=b else cu=da;end;end else cq[cz][cm[cx[199]]]=cq[cv];end end end else do if not(cx[27]>86)then if not(cy<84)then if not(cy>84)then local b do b=cz end cq[b]=cq[b](cq[b+1]);else do if(cy>85)then else if cq[cz]then cu=da;end;end end end else if not(cy<82)then if 82==cy then ci=cq[cx[cz]]else cq[cz]=(cq[da]%cm[cv]);end else cq[cx[141]]=(cq[da]-cq[cv]);end end else if not(cy<90)then if not(cy>90)then cu=cx[199];else if(cy>91)then do cq[cz]=(not cq[da]);end else by[cx[141]]()end end else do if not(cy>87)then local b,i b=da i=cq[b]for ck=(b+1),cx[30]do do i=(i..cq[ck]);end end;cq[cz]=i;else if not(cx[27]~=88)then else local b,i b=cz i=cq[cx[199]]do cq[(b+1)]=i;end do cq[b]=i[cm[cv]];end end end end end end end end end end else if not(cy>22)then if not(cy<11)then do if not(cy<17)then if not(cy<20)then if not(cy>20)then local b b=cz cq[b]=cq[b](bl(cq,b+e,cx[199]));else if 21==cy then do cq[cz]=-cq[da];end else cq[cz]=(cq[cx[199]]/cq[cv]);end end else if not(cy>17)then local b do b=cz end cq[b](cq[(b+1)])else if(cy>18)then cq[cs]();else cq[cz]=(cq[da]/cm[cv]);end end end else do if not(cy<14)then if not(cy>14)then if(not(cq[cz]==cm[cv]))then do cu=da;end end;else if(cy>15)then local b b=cx[141]do return cq[b](bl(cq,(b+1),da))end;else local b b={}if(#s>0)then for e=1,#s do local i do i=s[e]end for e=0,#i do local ck,cl,cp ck=i[e]do cp=ck[1]end do cl=ck[2]end if(cp==cq and cl>=0)then do b[cl]=cp[cl]end ck[1]=b end end end end return true;end end else do if not(cy>11)then cq[cz][cm[da]]=cm[cv];else if 12==cy then do cu=((cm[cz]<cq[cx[30]])and cx[c]or cu)end else cq[cx[141]]=(cq[da]*cm[cv]);end end end end end end end else if not(cy<5)then if not(cx[27]<8)then if not(cy>8)then cq[cx[141]]=(cq[da]*cq[cv]);else if(cy>9)then local b,c do c=cz end b={}if(#s>0)then do for e=1,#s do local i i=s[e]for e=0,#i do local s,ck,cl s=i[e]do cl=s[1]end ck=s[2]do if(cl==cq and ck>=0)then b[ck]=cl[ck]s[1]=b end end end end end end return bl(cq,c,co);else cq[cz]=ch[da];end end else if not(cx[27]>5)then cu=((cq[cz]<cq[cv])and cx[199]or cu)else if(cy<7)then do if not cq[cz]then do cu=da;end end;end else local b b=cq[db][cn]cq[db][cn]=(b..cq[cv]);end end end else do if not(cy<2)then if not(cy>2)then local b,c,e,i c=cz i,e=bz(cq[c](bl(cq,(c+k),da)))co=(e+c-1)do b=0 end do for e=c,co do b=(b+1);cq[e]=i[b];end;end else if 3==cy then ch[da]=cq[cx[141]];else do if not cq[cx[30]]then cq[cz]=cq[cx[30]];cu=da;end;end end end else if 0==cy then cq[cz]=(cq[da]+cm[cv]);else cq[cz]=cq[da][cm[cv]];end end end end end else if not(cy<34)then if not(cy>39)then if not(cy>36)then if not(cx[27]<35)then if 35==cy then by[cz]=by[cw]else by[cz]={}end else if((cm[cz]<cq[cv]))then cu=da;end;end else if not(cy>37)then by[cz]=cq[cw]else if not(cy~=38)then cq[cz]=cq[da];else do if cz then cz=false;cv=da;cu=(cu-1);else cu=(cu+da+cx[30]);end end end end end else if not(cy>42)then if not(cy>40)then local b b=cz do cq[b]=cq[b](bl(cq,b+1,co));end else if not(cx[27]~=41)then cq[cz]={};else by=cq end end else do if not(cy>43)then cm=by[cz](cm)else if(cy<45)then cq[cz]=by[cw]else local b,c,e,i i=cz do c,b=bz(cq[i](cq[(i+1)]))end co=(b+i-1)do e=0 end for b=i,co do e=(e+1);cq[b]=c[e];end;end end end end end else if not(cy>27)then if not(cy>24)then if(cy>23)then cq[cz]=#cq[cx[199]];else local b,c,e b=cx[141]c=cq[b]e=cq[(b+2)]if((e>0))then if((c>cq[b+1]))then cu=da;else cq[(b+3)]=c;end elseif((c<cq[b+g]))then cu=da;else cq[(b+3)]=c;end end else if not(cy<26)then do if not(cy~=26)then cu=((cm[cz]~=cm[cv])and cx[199]or cu)else local b,c do c=cx[o]end do b=cq[da]end do cq[(c+1)]=b;end cq[c]=b[cq[cv]];end end else cq[cz]=cm[da]end end else if not(cy<31)then if not(cy<32)then if not(cy~=32)then cq[cz]();else cj[cu]=bv[cn];do cu=cx[199];end end elseif(not(cq[cz]~=cm[cv]))then cu=da;end else if not(cy>28)then if((cq[cz]<cq[cv]))then cu=cx[199];end;else do if 29==cx[27]then do cq[cz]=cq[da][cq[cv]];end else do ci[cm[da]]=cq[cz];end end end end end end end end end cu=(cu+1);end;end end;end t=1449 else if t>1456 then break else t=1476 return z(bt(bh()),{},bh())();end end else if t>=1346 then if t<1357 then by={}t=1366 else v={}t=1408 end else bt=function(b,c,c,c,c)local c,e,g,i,k,o,s,ch=95,51,71,96,18,48,11,30,47,62,76,35,50,19,68,60,59,27,10,98,97,63,97,82,33,21,94 while c~=54 do if e>=266 then if e>=385 then if e<=423 then if e>390 then for ci=1,bi()do i[ci-1]=bt();end e=462 else e=423 s[169]=ch end else if e<=462 then e=501 s[155]=i;else if e<530 then e=532 do return s;end else c=54;end end end else if e>=316 then if e>323 then for c=1,k do local ci,cj,ck,cl=73,58,52,13,52,20,80,36,47,84,42,46,36,89 while ci~=25 do if cj>=148 then if cj>=191 then if cj>200 then ci=25;else cj=225 ch[c]=ck;end else do if(0==cl)then ck=(0~=be());elseif(1==cl)then ck=bk();elseif(not(cl~=4))then do ck=bc();end elseif(2==cl)then ck=b[bc()];end;end cj=191 end else if cj>=84 then if cj<107 then do cl=be()end cj=114 else ck=nil cj=148 end else ck,cl=nil cj=84 end end end end e=385 else do ch={}end e=355 end else if e<279 then e=281 s[144]=be();else e=316 k=bi()end end end else if e>=179 then if e<=215 then if e>184 then e=231 do for b=(#bv+1),(#bv+o)do local c,ci,cj,ck,cl=79,57,42,55,53,51,53,93,81,83,15,57,98,60,93,54,97,68,49,61,46,12,55,57,61 while c~=35 do if ci>=351 then if ci<=453 then if ci>=416 then if ci<446 then do cl[30]=ca(ck,21,29);end ci=453 else do cl[199]=ca(cj,12,33);end ci=488 end else if ci<369 then ci=376 cl[141]=ca(ck,3,11);else do cl[128]=ca(ck,12,20);end ci=416 end end else if ci<=517 then if ci>491 then cl[26]=-cl[30]ci=566 else cl[10]=-cl[l]ci=517 end else if ci<597 then ci=603 bv[b]=cl;else c=35;end end end else if ci>=204 then if ci<=243 then if ci<238 then cj=bi()ci=243 else ci=280 cl[73]=be();end else if ci>283 then ci=351 cl[p]=ca(cj,1,11);else cl[74]=ca(ck,1,2);ci=303 end end else if ci>=112 then if ci<153 then cl[130]=be();ci=156 else ci=204 ck=bi()end else if ci<83 then ci=92 cj,ck,cl=nil else cl={}ci=112 end end end end end end end else o=bi()e=215 end else if e>240 then s[179]=g;e=266 else e=246 for b=1,bi()do local c,l,p,ci,cj,ck=64,59,82,37,13,68,36,29,14,62,41,87,29,57,28,39,86,78,59,36,43,15,50,81,66 while c~=47 do if l<=296 then if l<=137 then if l>=100 then if l<134 then ci[130]=be();l=137 else ci[167]={};l=167 end else if l>61 then ci={{},nil,nil}l=100 else p,ci,cj,ck=nil l=79 end end else if l<=216 then if l<212 then do if not(be()~=1)then for cl=1,be()do do ci[f][cl]={be()==0,bi()}end end end end l=216 else l=232 cj=bi()end else if l<=232 then l=264 p=bi()else if l>267 then l=315 ci[74]=ck else l=296 ck=ca(cj,1,2)end end end end else if l>=404 then if l>=490 then if l>=520 then if l>522 then c=47;else l=545 do g[b]=ci;end end else do ci[26]=-ci[30]end l=520 end else if l>411 then ci[10]=-ci[141]l=490 else ci[73]=ca(cj,12,20);l=447 end end else if l>=358 then if l<380 then l=386 ci[199]=ca(p,12,33);else l=404 ci[30]=ca(cj,21,29);end else if l<325 then l=334 ci[27]=ca(p,1,q);else ci[141]=ca(cj,3,11);l=358 end end end end end end end end else if e>=107 then if e<125 then e=130 i={}else s={}e=179 end else if e<72 then e=76 g,i,k,o,s,ch=nil else e=107 g={}end end end end end end t=1346 end end else if t<=1205 then if t>1191 then bk=function()local b,c,e,f,g,i,k,l=67,59,36,43,28,77,73,29,46,79,43,79,96,19,99,18,82,28 while b~=35 do if c>=234 then if c<=269 then if c<=234 then f=bd(20,g,11)c=253 else if c<261 then do l=(bd(0,g,20)*4294967296+k)end c=269 else e=1 c=295 end end else if c<=295 then c=333 do if not(f~=0)then if 0~=l then f=1 do e=0 end else return(i*0)end elseif not(f==2047)then else do if not(l~=0)then do return(i*(0/0))end else return(i*(1/0))end end end end else if c>338 then b=35;else c=360 do return(i*(2^(f-1023))*(l/ce+e))end end end end else if c>=139 then if c<=139 then g=bi()c=169 else if c>174 then i=((-1)^bd(31,g,1))c=234 else do if((k==0 and g==0))then return 0 end end c=218 end end else if c<98 then e,f,g,i,k,l=nil c=101 else c=139 k=bi()end end end end end t=1221 else t=1205 bw=function()local b,c do b,c=bq(bm,bn,(bn+2))end bn=(bn+2);return((c*256)+b);end end else if t>=1269 then if t>1273 then bv={}t=1324 else bz=function(...)return{...},cc('#',...)end t=1308 end else t=1269 bc=function(b,b,b)local b,c,e,f=65,47,24,91,77,30,39,33,13,49,66,85,95 while b~=34 do if c<=115 then if c>=86 then if c<106 then c=115 f=bi()else e=bm:sub(bn,(bn+f-1))c=138 end else c=86 e,f=nil end else if c<=138 then c=157 bn=(bn+f);else if c<197 then c=203 return e;else break end end end end end end end end else if t<=968 then if t>=895 then if t>=933 then if t>942 then t=1013 do for b=1,31 do bf[b]=w w=(w*2)end end else t=968 do w=2 end end else do bf={[0]=1}end t=933 end else if t<842 then t=847 x=''else ce=(2^52)t=895 end end else if t>=1121 then if t<=1121 then t=1144 bn=1 else if t<1161 then do bi=function()local b,c,e,f do f,e,c,b=bq(bm,bn,(bn+3))end bn=(bn+4);return((b*16777216)+(c*65536)+(e*256)+f);end end t=1169 else do be=function()local b b=bq(bm,bn,bn)bn=(bn+1);return b;end end t=1188 end end else if t<=1013 then t=1039 bd=function(b,c,e,f)local f,g,i=73,57,46,78,65,22,15,33,20,81,23,34,13,28,55 while f~=30 do if g>=152 then if g>=175 then if g>181 then f=30;else g=193 do return i end end else g=175 i=(i-i%1)end else if g>=105 then if g>110 then g=152 i=((c/bf[b])%bf[e])else g=135 i=nil end else g=105 i=nil end end end end else if t<1084 then bj=(bit_lib and bit_lib.bxor or function(b,c)b=b%(2^32)c=c%(2^32)local e,f=0,1 while b>h and c>0 do local g,h=b%16,c%16 e=e+bb[g+1][h+1]*f b=(b-g)/16 c=(c-h)/16 f=f*16 end e=e+b*f+c*f return e end)t=1087 else t=1121 do ca=function(b,c,e,f,f)local f f=((b/2^(c-1))%2^((e-1)-(c-1)+1))return(f-f%1);end end end end end end end else if t>=451 then if t<=587 then if t<=478 then if t<475 then t=478 cc=select else bg=type t=515 end else if t>=557 then if t>559 then t=628 cd=math.floor else t=587 u=math.abs end else bu=(function(b,c,c)if'number'==bg(b)then return true else return false end end)t=557 end end else if t<=686 then if t<=628 then bl=(unpack or table.unpack)t=664 else if t>672 then y={}t=733 else bs=tonumber t=686 end end else if t>=770 then if t<781 then bm=cbfunction(b,c,c,c)return y[bs(b,j)]end)t=788 else t=807 bb={{0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,},{1,0,3,2,5,d,7,6,9,8,11,10,13,12,15,14,},{2,3,0,1,6,7,4,5,10,11,8,9,14,15,12,13,},{3,2,1,a,7,6,5,4,11,10,9,8,15,14,13,12,},{4,5,6,7,0,1,2,3,12,13,14,15,8,9,10,11,},{5,4,7,6,1,0,3,2,13,12,15,14,9,8,11,10,},{6,7,4,5,2,3,0,1,14,15,12,13,10,11,8,9,},{7,6,5,4,3,2,1,0,15,14,13,12,11,10,9,8,},{8,9,10,11,12,13,14,15,0,1,2,3,4,5,6,7,},{9,8,11,10,13,12,15,14,1,0,3,m,5,4,7,6,},{10,11,8,9,14,15,12,13,2,3,0,1,6,7,4,5,},{11,10,9,8,15,14,13,12,3,2,1,0,7,6,5,4,},{12,13,14,15,8,9,10,11,4,5,6,7,0,1,2,3,},{13,12,15,14,9,8,11,10,5,4,7,6,1,0,3,2,},{14,15,12,13,10,11,n,9,6,7,4,5,2,3,0,1,},{r,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0,},nil,nil}end else t=770 do for a=0,255 do y[a]=ba(a);end end end end end else if t>=260 then if t<=334 then if t<=260 then cf=string.rep t=288 else if t<331 then t=334 bp=table.concat else do br=table.insert end t=363 end end else if t<=363 then t=389 bx=math.ldexp else if t<415 then do bh=(getfenv or function()return _ENV end)end t=418 else t=451 do bo=setmetatable end end end end else if t<=106 then if t>92 then t=155 do bq=string.byte end else t=106 u,v,w,x,y,z,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg=nil end else if t>=198 then if t<228 then cg=string.sub t=231 else cb=string.gsub t=260 end else t=198 do ba=string.char end end end end end end end end)(0,nil,199,4,1,167,1,0,1,16,1,141,2,8,141,27,11,15)
